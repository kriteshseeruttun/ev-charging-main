rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user is accessing their own data
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Allow users to read and write their own profile document
    match /profiles/{userId} {
      allow read, write: if isAuthenticated() && isOwner(userId);
    }

    // Rules for bookings collection
    match /bookings/{bookingId} {
      // Allow users to read all bookings (needed for viewing available slots)
      allow read: if isAuthenticated();
      
      // Allow users to create bookings if they're authenticated and setting their own userId
      allow create: if isAuthenticated() 
        && request.resource.data.userId == request.auth.uid
        && request.resource.data.userEmail == request.auth.token.email;
      
      // Allow users to update/delete only their own bookings
      allow update, delete: if isAuthenticated() 
        && resource.data.userId == request.auth.uid;
    }
    
    // Default deny all other requests
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
